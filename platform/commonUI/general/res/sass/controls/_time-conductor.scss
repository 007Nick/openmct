@mixin toiLineHovEffects() {
	&:before,
	&:after {
		background-color: $timeControllerToiLineColorHov;
	}
}

.l-time-conductor {
	$minW: 500px;
	$knobHOffset: 0px;
	$rangeValPad: $interiorMargin;
	$rangeValOffset: $sliderKnobW + $interiorMargin;
	$r1H: nth($ueTimeControlH,1);
	$r2H: nth($ueTimeControlH,2);
	$r3H: nth($ueTimeControlH,3);

    // Glyphs Todo: replace with refactored CSS approach when that is merged into master
    $glyphIconFixed: '\e604';
    $glyphIconRealtime: '\43';
    $glyphIconLatest: '\44';

    border-top: 1px solid $colorInteriorBorder;
    padding-top: $interiorMargin;
    min-width: $minW;
    position: relative;

	>.l-row-elem {
        // First order row elements
		box-sizing: border-box;
        width: 100%;
        position: relative;
        &:not(:first-child) {
            margin-top: $interiorMargin;
        }
	}

    .l-time-conductor-inputs-holder,
    .l-time-conductor-ticks {
        font-size: 0.8rem;
    }

	.l-time-conductor-inputs-holder {
        $inputW: 180px;
        $ticksBlockerFadeW: 25px;
        $iconCalendarW: 16px;
        $wBgColor: $colorBodyBg;
        //$wBgColor: green;
        $wBgW: $inputW + $interiorMargin + $iconCalendarW;

        height: $r1H;
        z-index: 1;
        .l-time-range-input-w {
            // Wraps a datetime text input field
            position: absolute;
            width: $wBgW + $ticksBlockerFadeW;
            &.start-date {
                @include background-image(linear-gradient(90deg, $wBgColor $wBgW, transparent 100%));
            }
            &.end-date {
                @include background-image(linear-gradient(270deg, $wBgColor $wBgW, transparent 100%));
                right: 0;
                text-align: right;
            }
            input[type="text"] {
                width: $inputW;
            }
            .icon-calendar {
                margin-top: 4px;
            }
        }
	}

	.l-time-conductor-ticks {
        $c: $colorTick;
		height: $r1H;
        mct-conductor-axis {
            @include transform(translateY(3px));
            display: block;
            position: relative;
            width: 100%;
        }
        .l-axis-holder {
            height: $r1H;
            position: relative;
            width: 100%;
            svg {
                text-rendering: geometricPrecision;
                color: transparent;
                fill: $c !important; // Todo: figure out why this isn't working
                width: 100%; height: 100%;
                > g {
                    font-size: 0.9em;
                }
                path {display: none;}
                line {stroke: $c;}
            }
        }
	}
    .l-data-visualization {
        background: rgba($colorTick, 0.3);
        height: $r2H;
    }

    .mode-selector .s-menu-btn {
        &:before {
            @extend .ui-symbol;
            margin-right: $interiorMarginSm;
            content: $glyphIconFixed;
        }
    }

    // Realtime, latest modes
    &.realtime-mode,
    &.latest-mode {
        .l-time-conductor-inputs-holder {
            .l-time-range-input-w {
                input:not(:hover) {
                    background: transparent;
                    box-shadow: none;
                    border-radius: 0;
                }
                .icon-calendar {
                    display: none;
                }
                &.end-date {
                    display: none;
                }
            }
        }

        .l-data-visualization {
            background: rgba($colorTimeCondKey, 0.5) !important
        }
        .mode-selector .s-menu-btn {
            @include btnSubtle($colorTimeCondKey, pullForward($colorTimeCondKey, $ltGamma));
        }
    }

    &.realtime-mode .mode-selector .s-menu-btn:before { content: $glyphIconRealtime; }
    &.latest-mode .mode-selector .s-menu-btn:before { content: $glyphIconLatest; }
}

.s-time-range-val {
	border-radius: $controlCr;
	background-color: $colorInputBg;
	padding: 1px 1px 0 $interiorMargin;
}

/******************************************************************** MOBILE */

@include phoneandtablet {
    .l-time-conductor {
        min-width: 0;
        .l-time-range-slider-holder,
        .l-time-conductor-ticks {
            display: none;
        }
    }
}

@include phone {
    .l-time-conductor {
        .l-time-conductor-inputs-holder {
            &.l-flex-row,
            .l-flex-row {
                @include align-items(flex-start);
            }
            .l-time-range-inputs-elem {
                &.type-icon {
                    margin-top: 3px;
                }
            }
            .l-time-conductor-inputs-holder {
                @include flex-direction(column);
                .l-time-range-input-w:not(:first-child) {
                    &:not(:first-child) {
                        margin-top: $interiorMargin;
                    }
                    margin-right: 0;
                }
                .l-time-range-inputs-elem {
                    &.lbl { display: none; }
                }
            }
        }
    }
}

@include phonePortrait {
    .l-time-conductor {
        .l-time-conductor-inputs-holder {
            .l-time-conductor-inputs-holder {
                @include flex(1 1 auto);
                padding-top: 25px; // Make room for the ever lovin' Time Domain Selector
                .flex-elem {
                    @include flex(1 1 auto);
                    width: 100%;
                }
                input[type="text"] {
                    width: 100%;
                }
            }
        }
    }
    .l-time-domain-selector {
        right: auto;
        left: 20px;
    }
}
